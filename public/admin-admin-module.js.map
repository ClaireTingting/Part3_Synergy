{"version":3,"sources":["./src/app/admin/order-table/order-table.component.ts","./src/app/admin/order-table/order-table.component.html","./src/app/admin/auth/auth.guard.ts","./src/app/admin/book-table/book-table.component.ts","./src/app/admin/book-table/book-table.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/book-editor/book-editor.component.ts","./src/app/admin/book-editor/book-editor.component.html","./src/app/admin/auth/auth.component.ts","./src/app/admin/auth/auth.component.html"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Order } from 'src/app/model/order.model';\nimport { OrderRepository } from 'src/app/model/order.repository';\n\n@Component({\n  templateUrl: './order-table.component.html',\n})\nexport class OrderTableComponent implements OnInit\n{\n  includeShipped = false;\n\n  constructor(private repository: OrderRepository,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  getOrders(): Order[]\n  {\n    return this.repository.getOrders().filter(o => this.includeShipped || !o.shipped);\n  }\n\n  markShipped(order: Order): void\n  {\n    order.shipped = (order.shipped) ? false : true;\n    this.repository.updateOrder(order);\n    this.router.navigateByUrl('/admin/main/orders');\n  }\n\n  delete(id: number): void\n  {\n    if (confirm('Are you sure?'))\n    {\n      this.repository.deleteOrder(id);\n    }\n    else\n    {\n      this.router.navigateByUrl('/admin/main/orders');\n    }\n  }\n\n}\n","<!-- Checkbox -->\n<div class=\"form-check\">\n  <label class=\"form-check-label\">\n    <input type=\"checkbox\" class=\"form-check-input\"\n    [(ngModel)]='includeShipped'>\n    Display Shipped Orders\n  </label>\n</div>\n\n<table class=\"table table-sm\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Postal Code</th>\n      <th colspan=\"2\">Cart</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngIf='getOrders().length == 0'>\n      <td colspan=\"5\">There are no orders</td>\n    </tr>\n    <ng-template ngFor let-o [ngForOf]='getOrders()'>\n      <tr>\n        <td>{{ o.name }}</td>\n        <td>{{ o.postalCode }}</td>\n        <th>Product</th>\n        <th>Quantity</th>\n        <td>\n          <button class=\"btn btn-warning m-1\" (click)='markShipped(o)'>\n            <i class=\"{{ o.shipped ? 'fas fa-shipping-fast' : 'fas fa-truck' }}\"></i> {{ o.shipped ? \"Shipped\" : \"Ship\" }}\n          </button>\n        </td>\n        <td>\n          <button class=\"btn btn-danger\" (click)='delete(o._id)'>\n            <i class=\"fas fa-trash-alt\"></i> Delete\n          </button>\n        </td>\n      </tr>\n      <tr *ngFor='let line of o.cart.lines'>\n        <td colspan=\"2\"></td>\n        <td>{{ line.book.name }}</td>\n        <td>{{ line.quantity }}</td>\n      </tr>\n    </ng-template>\n  </tbody>\n</table>\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from 'src/app/model/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard\r\n{\r\n  path: ActivatedRouteSnapshot[];\r\n  route: ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean\r\n  {\r\n    if (this.auth.authenticated)\r\n    {\r\n      console.log('authenticated');\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      console.log('cannot authenticate');\r\n      this.router.navigate(['/admin/auth']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Book } from 'src/app/model/book.model';\nimport { BookRepository } from 'src/app/model/book.repository';\n\n@Component({\n  templateUrl: './book-table.component.html'\n})\nexport class BookTableComponent implements OnInit {\n\n  constructor(private repository: BookRepository,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  getBooks(): Book[]\n  {\n    return this.repository.getBooks();\n  }\n\n  deleteBook(id: number): void\n  {\n    if (confirm('Are you sure?') && (id !== undefined))\n    {\n      this.repository.deleteBook(id);\n    }\n    else\n    {\n      window.location.reload(); // refresh fix\n      this.router.navigateByUrl('/admin/main/books');\n    }\n  }\n\n  addBook(): void\n  {\n    this.router.navigateByUrl('/admin/main/books/add');\n  }\n\n  editBook(id: number): void\n  {\n    this.router.navigateByUrl('/admin/main/books/edit/' + id);\n  }\n\n}\n","<table class=\"table table-sm table-striped\">\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Author</th>\n      <th>Published</th>\n      <th>Description</th>\n      <th>Price</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor='let b of getBooks()'>\n      <td>{{ b.name }}</td>\n      <td>{{ b.author }}</td>\n      <td>{{ b.published }}</td>\n      <td>{{ b.description }}</td>\n      <td>{{ b.price | currency: 'USD': 'symbol': '2.2-2'}}</td>\n      <td>\n        <button class=\"btn btn-sm btn-primary m-1\" (click)='editBook(b._id)'>\n          <i class=\"fas fa-pencil-alt\"></i> Edit\n        </button>\n      </td>\n      <td>\n        <button class=\"btn btn-sm btn-danger m-1\" (click)='deleteBook(b._id)'>\n          <i class=\"fas fa-trash-alt\"></i> Delete\n        </button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<button class=\"btn btn-primary\" (click)='addBook()'>\n  <i class=\"fas fa-plus-circle\"></i> Add New Book\n</button>\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../model/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './admin.component.html'\r\n})\r\nexport class AdminComponent\r\n{\r\n    constructor(private auth: AuthService,\r\n                private router: Router) {}\r\n\r\n    logout(): void\r\n    {\r\n      this.auth.logout();\r\n\r\n      this.router.navigateByUrl('/');\r\n    }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row\"></div>\r\n\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-3\">\r\n      <button class=\"btn btn-outline-info btn-block\"\r\n        routerLink='/admin/main/books'\r\n        routerLinkActive='active'>\r\n        Books\r\n      </button>\r\n\r\n      <button class=\"btn btn-outline-info btn-block\"\r\n        routerLink='/admin/main/orders'\r\n        routerLinkActive='active'>\r\n        Orders\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"col-9\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AdminComponent } from './admin.component';\r\nimport { OrderTableComponent } from './order-table/order-table.component';\r\nimport { BookEditorComponent } from './book-editor/book-editor.component';\r\nimport { BookTableComponent } from './book-table/book-table.component';\r\n\r\nconst routing = RouterModule.forChild([\r\n  { path: 'auth', component: AuthComponent },\r\n  { path: 'main', component: AdminComponent, canActivate: [AuthGuard],\r\n   children: [\r\n      { path: 'books/:mode/:id', component: BookEditorComponent, data: {title: 'Edit Book'}, canActivate: [AuthGuard]},\r\n      { path: 'books/:mode', component: BookEditorComponent, data: {title: 'Add Book'}, canActivate: [AuthGuard]},\r\n      { path: 'books', component: BookTableComponent, data: {title: 'Book Table'}, canActivate: [AuthGuard]},\r\n      { path: 'orders', component: OrderTableComponent, data: {title: 'Order Table'}, canActivate: [AuthGuard]},\r\n      { path: '**', redirectTo: 'book-list' }]\r\n  },\r\n  { path: '**', redirectTo: 'auth' },\r\n]);\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, routing],\r\n  providers: [AuthGuard],\r\n  declarations: [AuthComponent, AdminComponent, OrderTableComponent, BookEditorComponent, BookTableComponent]\r\n})\r\nexport class AdminModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Book } from 'src/app/model/book.model';\nimport { BookRepository } from 'src/app/model/book.repository';\n\n@Component({\n  templateUrl: './book-editor.component.html'\n})\nexport class BookEditorComponent implements OnInit {\n  editing = false;\n  book: Book = new Book();\n\n  constructor(private repository: BookRepository,\n              private router: Router,\n              activeRoute: ActivatedRoute)\n  {\n    this.editing = activeRoute.snapshot.params.mode === 'edit';\n\n    if (this.editing)\n    {\n      Object.assign(this.book, repository.getBook(activeRoute.snapshot.params.id));\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  save(form: NgForm): void\n  {\n    this.repository.saveBook(this.book);\n    this.router.navigateByUrl('/admin/main/books');\n  }\n\n}\n","<div class=\"bg-primary p-2 text-white\"\n  [class.bg-warning]='editing'\n  [class.text-dark]='editing'>\n  <h5>{{ editing ? 'Edit' : 'Add'}} Book</h5>\n</div>\n<form novalidate #form='ngForm' (ngSubmit)='save(form)'>\n\n  <div class=\"form-group\">\n    <label>Name</label>\n    <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]='book.name'>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Author</label>\n    <input type=\"text\" class=\"form-control\" name=\"author\" [(ngModel)]='book.author'>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Published</label>\n    <input type=\"text\" class=\"form-control\" name=\"published\" [(ngModel)]='book.published'>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Description</label>\n    <input type=\"text\" class=\"form-control\" name=\"description\" [(ngModel)]='book.description'>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Price</label>\n    <input type=\"text\" class=\"form-control\" name=\"price\" [(ngModel)]='book.price'>\n  </div>\n\n  <button type='submit' class=\"btn btn-primary m-1\" [class.btn-warning]='editing'>\n    <i class=\"{{editing ? 'fas fa-save' : 'fas fa-plus-circle' }}\"></i> {{ editing ? \"Save\" : \"Add\" }}\n  </button>\n  <button type='reset' class=\"btn btn-secondary\" routerLink='/admin/main/books'>\n    <i class=\"fas fa-undo\"></i> Cancel\n  </button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../model/auth.service';\n\nimport { User } from '../../model/user.model';\n\n@Component({\n  templateUrl: './auth.component.html'\n})\nexport class AuthComponent implements OnInit\n{\n  public user: User;\n  public errorMessage: string;\n\n  constructor(private router: Router,\n              private auth: AuthService) { }\n\n  ngOnInit(): void\n  {\n    this.user = new User();\n  }\n\n  authenticate(form: NgForm): void\n  {\n    if (form.valid)\n    {\n      // perform authentication\n      this.auth.authenticate(this.user).subscribe(data => {\n        if (data.success)\n        {\n          this.auth.storeUserData(data.token, data.user);\n          this.router.navigateByUrl('admin/main');\n        }\n      });\n    }\n    else\n    {\n      this.errorMessage = 'Form Data Invalid';\n    }\n  }\n\n}\n","<div class=\"bg-info p-2 text-center text-white\">\n  <h3>BookStore Admin</h3>\n</div>\n\n<main class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 col-lg-6 offset-lg-3 col-sm-8 offset-sm-1\">\n      <div class=\"bg-danger mt-2 p-2 text-center text-white\"\n        *ngIf='errorMessage != null'>\n        {{ errorMessage }}\n      </div>\n      <h1>Please Login</h1>\n      <form autocomplete='off' #form='ngForm' (ngSubmit)='authenticate(form)'>\n\n      <fieldset class=\"form-group\">\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" class=\"form-control\"\n        [(ngModel)]='user.username'\n        name='username' placeholder='Enter Username'\n        id='username' required autofocus autocomplete='off'>\n      </fieldset>\n\n      <fieldset class=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input type=\"password\" class=\"form-control\"\n        [(ngModel)]='user.password'\n        name='password' placeholder='Enter Password'\n        id='password' required autocomplete='off'>\n      </fieldset>\n\n      <fieldset class=\"form-group text-right\">\n        <button class='btn btn-primary m-1' type='submit'>\n          <i class=\"fas fa-sign-in-alt\"></i>\n          Log In\n        </button>\n        <button class='btn btn-secondary m-1' routerLink='/home'>\n          <i class=\"fas fa-undo\"></i>\n          Cancel\n        </button>\n      </fieldset>\n\n    </form>\n    </div>\n  </div>\n</main>\n"],"sourceRoot":"webpack:///"}